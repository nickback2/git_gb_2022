Основные команды Git
Введение в контроль версий. Работа с Git. Составление инструкции по работе с Git.
✦ git init – инициализация локального репозитория
✦ git status – получить информацию от git о его текущем состоянии
✦ git add – добавить файл или файлы к следующему коммиту
✦ git commit -m “message” – создание коммита.
✦ git log – вывод на экран истории всех коммитов с их хеш-кодами
✦ git checkout – переход от одного коммита к другому
✦ git checkout master – вернуться к актуальному состоянию и продолжить работу
✦ git diff – увидеть разницу между текущим файлом и закоммиченным файлом
✦ git branch -d <название ветки> – удалить ветку
✦ git merge <название ветки> - слить ветку (с той в которой находитесь)
✦ git clone <адрес репозитория> - копирует удаленный репозиторий на ваш компьютер
✦ git pull – получение изменений и слияние с локальной версией
✦ git push – отправляет локальную версию репозитория на внешний

Облегчённый язык разметки, созданный с целью обозначения форматирования в простом тексте, с максимальным сохранением его читаемости человеком, и пригодный для машинного преобразования в языки для продвинутых публикаций.

Синтаксис языка Markdown
✦ # Заголовок – выделение заголовков. Количество символов “#” задаёт уровень заголовка
(поддерживается 6 уровней).
✦ = или - – подчёркиванием этими символами (не менее 3 подряд) выделяют заголовки
первого (“=”) и второго (“-”) уровней.
✦ ** Полужирное начертание** или __ Полужирное начертание__
✦ *Курсивное начертание* или _Курсивное начертание_
✦ ***Полужирное курсивное начертание***
✦ ~~Зачёркнутый текст~~
✦ * Строка – ненумерованные списки, символ “*” в начале строки
✦ 1, 2, 3 … – нумерованные списки